// Automatically generated from template - EDITS WILL BE LOST

// Generated by binval.awk with options declare binvalc

#ifndef __Header_binvalc__
#define __Header_binvalc__

char *	BinaryValueDescription_Zero(Uint16 value);
char *	BinaryValueDescription_One(Uint16 value);
char *	BinaryValueDescription_Three(Uint16 value);
char *	BinaryValueDescription_FFFF(Uint16 value);
char *	BinaryValueDescription_PregnancyStatus(Uint16 value);
char *	BinaryValueDescription_RegionSpatialFormat(Uint16 value);
char *	BinaryValueDescription_RegionDataType(Uint16 value);
char *	BinaryBitMapDescription_RegionFlags(Uint16 value);
char *	BinaryValueDescription_PixelComponentOrganization(Uint16 value);
char *	BinaryValueDescription_PixelComponentPhysicalUnits(Uint16 value);
char *	BinaryValueDescription_PixelComponentDataType(Uint16 value);
char *	BinaryValueDescription_PixelRepresentation(Uint16 value);
char *	BinaryValueDescription_PixelRepresentationUnsigned(Uint16 value);
char *	BinaryValueDescription_PlanarConfiguration(Uint16 value);
char *	BinaryValueDescription_USPlanarConfiguration(Uint16 value);
char *	BinaryValueDescription_SamplesPerPixelIsOne(Uint16 value);
char *	BinaryValueDescription_SamplesPerPixelIsThree(Uint16 value);
char *	BinaryValueDescription_SamplesPerPixelIsOneOrThree(Uint16 value);
char *	BinaryValueDescription_SamplesPerPixelUsedIsTwo(Uint16 value);
char *	BinaryValueDescription_PlanarConfigurationIsColorByPlane(Uint16 value);
char *	BinaryValueDescription_PlanarConfigurationIsColorByPixel(Uint16 value);
char *	BinaryValueDescription_PlanarConfigurationIsColorByPlaneOrPixel(Uint16 value);
char *	BinaryValueDescription_BitsAre32(Uint16 value);
char *	BinaryValueDescription_BitsAre64(Uint16 value);
char *	BinaryValueDescription_BitsAre16(Uint16 value);
char *	BinaryValueDescription_BitsAre15(Uint16 value);
char *	BinaryValueDescription_BitsAre8(Uint16 value);
char *	BinaryValueDescription_BitsAre7(Uint16 value);
char *	BinaryValueDescription_BitsAre12Or16(Uint16 value);
char *	BinaryValueDescription_BitsAre11Or15(Uint16 value);
char *	BinaryValueDescription_BitsAre8Or16(Uint16 value);
char *	BinaryValueDescription_BitsAre16Or32(Uint16 value);
char *	BinaryValueDescription_BitsAre7Or15(Uint16 value);
char *	BinaryValueDescription_BitsAre15Or31(Uint16 value);
char *	BinaryValueDescription_BitsAre8Or10Or12Or16(Uint16 value);
char *	BinaryValueDescription_BitsAre7Or9Or11Or15(Uint16 value);
char *	BinaryValueDescription_BitsAre8Or12To16(Uint16 value);
char *	BinaryValueDescription_BitsAre7Or11To15(Uint16 value);
char *	BinaryValueDescription_BitsAre8Or12Or16(Uint16 value);
char *	BinaryValueDescription_BitsAre7Or11Or15(Uint16 value);
char *	BinaryValueDescription_BitsAre6To16(Uint16 value);
char *	BinaryValueDescription_BitsAre5To15(Uint16 value);
char *	BinaryValueDescription_BitsAre8To15(Uint16 value);
char *	BinaryValueDescription_BitsAre7To15(Uint16 value);
char *	BinaryValueDescription_BitsAre8To16(Uint16 value);
char *	BinaryValueDescription_BitsAre9To16(Uint16 value);
char *	BinaryValueDescription_BitsAre10To16(Uint16 value);
char *	BinaryValueDescription_BitsAre12To16(Uint16 value);
char *	BinaryValueDescription_BitsAre11To15(Uint16 value);
char *	BinaryValueDescription_BitsAre1Or8(Uint16 value);
char *	BinaryValueDescription_BitsAre0Or7(Uint16 value);
char *	BinaryValueDescription_CurveDataValueRepresentation(Uint16 value);
char *	BinaryValueDescription_CurveDataDescriptor(Uint16 value);
char *	BinaryValueDescription_AudioType(Uint16 value);
char *	BinaryValueDescription_AudioSampleFormat(Uint16 value);
char *	BinaryValueDescription_NumberOfChannels(Uint16 value);
char *	BinaryValueDescription_UltrasoundColorDataPresent(Uint16 value);
char *	BinaryValueDescription_PreferredPlaybackSequencing(Uint16 value);
char *	BinaryValueDescription_PreferredPlaybackSequencingForHangingProtocol(Uint16 value);
char *	BinaryValueDescription_PreferredPlaybackSequencingForStructuredDisplay(Uint16 value);
char *	BinaryValueDescription_FileSetConsistencyFlag(Uint16 value);
char *	BinaryValueDescription_RecordInUseFlag(Uint16 value);
char *	BinaryValueDescription_PixelIntensityRelationshipSign(Uint16 value);
char *	BinaryValueDescription_AllPossibleOverlayGroups(Uint16 value);
char *	BinaryValueDescription_Two(Uint16 value);
char *	BinaryValueDescription_ImageRotationValues(Uint16 value);

#endif /* __Header_binvalc__ */
