// Automatically generated from template - EDITS WILL BE LOST
//
// Generated by convert.awk with options or defaults ...
//
// 	 role=dicom
// 	 prefix=GAW_
// 	 dicomfunctionname=ToDicom_Template
// 	 dumpcommonfunctionname=DumpCommon
// 	 dumpselectedimagefunctionname=DumpSelectedImage
// 	 headeroffsetprefix=GAW_Offset
// 	 headeroffsetsuffix=ptr
// 	 headerclassprefix=GAW_HeaderClass
// 	 headerdicomclassprefix=GAW_Header_BothClass
// 	 headerdumpclassprefix=GAW_Header_BothClass
// 	 headerinstanceprefix=GAW_HeaderInstance
// 	 methodnameprefix=GAW_Method
// 	 methodconstructorargsprefix=GAW_MethodConstructorArgs
// 	 headerclassparameters=

void 
GAW_Header_BothClass::ToDicom_Template(AttributeList *list,unsigned imagenumber)
{
	(void)imagenumber;

	(*list)+=new DecimalStringAttribute(
		TagFromName(WindowWidth),
		GAW_HeaderInstance_FILEHDR->IH_img_dwindow);

	(*list)+=new DecimalStringAttribute(
		TagFromName(WindowCenter),
		GAW_HeaderInstance_FILEHDR->IH_img_dlevel);

	(*list)+=new LongStringAttribute(
		TagFromName(SoftwareVersions),
		GAW_HeaderInstance_FILEHDR->IH_img_version);

	(*list)+=new DecimalStringAttribute(
		TagFromName(RescaleIntercept),
		GAW_HeaderInstance_FILEHDR->IH_img_levelOffset);

	if (GAW_hashisto) (*list)+=new UnspecifiedShortAttribute(
		TagFromName(SmallestImagePixelValue),
		GAW_HeaderInstance_HISTOHDR->HS_hs_min);

	if (GAW_hashisto) (*list)+=new UnspecifiedShortAttribute(
		TagFromName(LargestImagePixelValue),
		GAW_HeaderInstance_HISTOHDR->HS_hs_max);

	(*list)+=new LongStringAttribute(
		TagFromName(ManufacturerModelName),
		String_Use(GAW_HeaderInstance_SUITEHDR->SU_prodid));

	(*list)+=new ShortStringAttribute(
		TagFromName(StationName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_ex_suid));

	(*list)+=new ShortStringAttribute(
		TagFromName(StudyID),
		GAW_HeaderInstance_EXAMHDR->EX_ex_no);

	(*list)+=new LongStringAttribute(
		TagFromName(InstitutionName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_hospname));

	(*list)+=new LongStringAttribute(
		TagFromName(PatientID),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_patid));

	(*list)+=new PersonNameAttribute(
		TagFromName(PatientName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_patname));

	(*list)+=new LongTextAttribute(
		TagFromName(AdditionalPatientHistory),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_hist));

	(*list)+=new PersonNameAttribute(
		TagFromName(ReferringPhysicianName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_refphy));

	(*list)+=new PersonNameAttribute(
		TagFromName(PerformingPhysicianName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_diagrad));

	(*list)+=new PersonNameAttribute(
		TagFromName(OperatorsName),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_op));

	(*list)+=new LongStringAttribute(
		TagFromName(StudyDescription),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_ex_desc));

	(*list)+=new CodeStringAttribute(
		TagFromName(Modality),
		String_Use(GAW_HeaderInstance_EXAMHDR->EX_ex_typ));

	(*list)+=new IntegerStringAttribute(
		TagFromName(SeriesNumber),
		GAW_HeaderInstance_SERIESHDR->SE_se_no);

	(*list)+=new LongStringAttribute(
		TagFromName(SeriesDescription),
		String_Use(GAW_HeaderInstance_SERIESHDR->SE_se_desc));

	(*list)+=new LongStringAttribute(
		TagFromName(PositionReferenceIndicator),
		String_Use(GAW_HeaderInstance_SERIESHDR->SE_anref));

	(*list)+=new LongStringAttribute(
		TagFromName(ProtocolName),
		String_Use(GAW_HeaderInstance_SERIESHDR->SE_prtcl));

	(*list)+=new IntegerStringAttribute(
		TagFromName(ImagesInAcquisition),
		GAW_HeaderInstance_SERIESHDR->SE_se_nacq);

	if (GAW_isct) (*list)+=new IntegerStringAttribute(
		TagFromName(InstanceNumber),
		GAW_HeaderInstance_CTHDR->CT_im_no);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(SliceThickness),
		GAW_HeaderInstance_CTHDR->CT_slthick);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(SpacingBetweenSlices),
		GAW_HeaderInstance_CTHDR->CT_scanspacing);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(SliceLocation),
		GAW_HeaderInstance_CTHDR->CT_loc);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(TableHeight),
		GAW_HeaderInstance_CTHDR->CT_tblht);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(KVP),
		GAW_HeaderInstance_CTHDR->CT_kvolt);

	if (GAW_isct) (*list)+=new IntegerStringAttribute(
		TagFromName(XRayTubeCurrent),
		GAW_HeaderInstance_CTHDR->CT_mamp);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(GantryDetectorTilt),
		GAW_HeaderInstance_CTHDR->CT_gantilt);

	if (GAW_isct) (*list)+=new DecimalStringAttribute(
		TagFromName(DataCollectionDiameter),
		GAW_HeaderInstance_CTHDR->CT_sfovmm);

	if (GAW_isct) (*list)+=new IntegerStringAttribute(
		TagFromName(AcquisitionNumber),
		GAW_HeaderInstance_CTHDR->CT_scannum);

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(InstanceNumber),
		GAW_HeaderInstance_MRHDR->MR_im_no);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(SliceThickness),
		GAW_HeaderInstance_MRHDR->MR_slthick);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(SpacingBetweenSlices),
		GAW_HeaderInstance_MRHDR->MR_scanspacing);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(SliceLocation),
		GAW_HeaderInstance_MRHDR->MR_loc);

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(EchoNumbers),
		GAW_HeaderInstance_MRHDR->MR_echonum);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(NumberOfAverages),
		GAW_HeaderInstance_MRHDR->MR_nex);

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(HeartRate),
		GAW_HeaderInstance_MRHDR->MR_hrtrate);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(SAR),
		GAW_HeaderInstance_MRHDR->MR_saravg);

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(TriggerWindow),
		GAW_HeaderInstance_MRHDR->MR_trgwindow);

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(CardiacNumberOfImages),
		GAW_HeaderInstance_MRHDR->MR_imgpcyc);

	if (GAW_ismr) (*list)+=new DecimalStringAttribute(
		TagFromName(FlipAngle),
		GAW_HeaderInstance_MRHDR->MR_mr_flip);

	if (GAW_ismr) (*list)+=new ShortStringAttribute(
		TagFromName(SequenceName),
		String_Use(GAW_HeaderInstance_MRHDR->MR_psdname));

	if (GAW_ismr) (*list)+=new ShortStringAttribute(
		TagFromName(ReceiveCoilName),
		String_Use(GAW_HeaderInstance_MRHDR->MR_cname));

	if (GAW_ismr) (*list)+=new IntegerStringAttribute(
		TagFromName(AcquisitionNumber),
		GAW_HeaderInstance_MRHDR->MR_rawrunnum);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(BitsAllocated),16);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(PixelRepresentation),1);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(SamplesPerPixel),1);

	(*list)+=new CodeStringAttribute(
		TagFromName(PhotometricInterpretation),"MONOCHROME2");

	(*list)+=new DecimalStringAttribute(
		TagFromName(RescaleSlope),"1");

	if (GAW_ismr) (*list)+=new LongStringAttribute(
		TagFromName(RescaleType),"US");

	if (GAW_isct) (*list)+=new LongStringAttribute(
		TagFromName(RescaleType),"HU");

	(*list)+=new UnspecifiedShortAttribute(
		TagFromName(PixelPaddingValue),0);

	(*list)+=new ShortStringAttribute(
		TagFromName(AccessionNumber));

	(*list)+=new DateStringAttribute(
		TagFromName(PatientBirthDate));

	(*list)+=new LongStringAttribute(
		TagFromName(Manufacturer),"GE Medical Systems");

	if (GAW_ismr) (*list)+=new UIStringAttribute(
		TagFromName(SOPClassUID),"1.2.840.10008.5.1.4.1.1.4");

	if (GAW_isct) (*list)+=new UIStringAttribute(
		TagFromName(SOPClassUID),"1.2.840.10008.5.1.4.1.1.2");

}

