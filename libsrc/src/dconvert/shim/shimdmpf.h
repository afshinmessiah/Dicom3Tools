// Automatically generated from template - EDITS WILL BE LOST
//
// Generated by convert.awk with options or defaults ...
//
// 	 role=dump
// 	 prefix=SHIM_
// 	 dicomfunctionname=ToDicom_Template
// 	 dumpcommonfunctionname=DumpCommon
// 	 dumpselectedimagefunctionname=DumpSelectedImage
// 	 headeroffsetprefix=SHIM_Offset
// 	 headeroffsetsuffix=ptr
// 	 headerclassprefix=SHIM_HeaderClass
// 	 headerdicomclassprefix=SHIM_Header_BothClass
// 	 headerdumpclassprefix=SHIM_Header_BothClass
// 	 headerinstanceprefix=SHIM_HeaderInstance
// 	 methodnameprefix=SHIM_Method
// 	 methodconstructorargsprefix=SHIM_MethodConstructorArgs
// 	 headerclassparameters=

void 
SHIM_Header_BothClass::DumpCommon(TextOutputStream *log)
{
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 0 << "] "<< "\t SYS-ID (ZASYSID)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZASYSID)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 8 << "] "<< "\t Name (ZANAME)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZANAME)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 24 << "] "<< "\t ID (ZAID)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAID)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 36 << "] "<< "\t Sex (ZASEX)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZASEX)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZASEX),"M",2)==0) (*log) << "\t\t 'M' = Male\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZASEX),"F",2)==0) (*log) << "\t\t 'F' = Female\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 38 << "] "<< "\t AGE years (ZAAGE)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAAGE)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 42 << "] "<< "\t Comment (ZACOMM)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZACOMM)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 62 << "] "<< "\t Hospital (ZAHOSP)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAHOSP)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 80 << "] "<< "\t Date 'YY-MM-DD' (ZADATW)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADATW)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 88 << "] "<< "\t Time 'HH:MM:SS' (ZATIME)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZATIME)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 96 << "] "<< "\t Zoom Size/NSlices 'n.nX/nn' enum='ES'=100mm,'VS'=150mm,'SS'=200mm,' S'=250mm,' M'=300mm,' L'=350mm,'LL'=400mm	 (ZAAREA)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAAREA)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 104 << "] "<< "\t TYPE/MODE 'XX/nnn' where nnn is Max(Nx,Ny) (ZASEQT)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZASEQT)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZASEQT),"IR",2)==0) (*log) << "\t\t 'IR' = Inversion Recovery\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZASEQT),"SE",2)==0) (*log) << "\t\t 'SE' = Spin Echo\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZASEQT),"FE",2)==0) (*log) << "\t\t 'FE' = Field Echo\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 107 << "] "<< "\t TYPE/MODE 'XX/nnn' where nnn is Max(Nx,Ny) (ZASEQM)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZASEQM)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 112 << "] "<< "\t TR mS 'TR=nnnn' (ZATR)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZATR)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 120 << "] "<< "\t TE mS 'TE=nnn' (ZATE)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZATE)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 128 << "] "<< "\t TI mS 'TI=nnn' (ZATI)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZATI)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 136 << "] "<< "\t Location mm 'OM+nnn','CN+nn' (ZALOK)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZALOK)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 144 << "] "<< "\t ECG 'ECG=nnn' (ZAECG)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAECG)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 152 << "] "<< "\t Left side of image (ZADIRL)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"RIGHT ",6)==0) (*log) << "\t\t 'RIGHT ' = Right\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"LEFT  ",6)==0) (*log) << "\t\t 'LEFT  ' = Left\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"ANTR  ",6)==0) (*log) << "\t\t 'ANTR  ' = Anterior\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"POSTR ",6)==0) (*log) << "\t\t 'POSTR ' = Posterior\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"HEAD  ",6)==0) (*log) << "\t\t 'HEAD  ' = Head\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL),"FEET  ",6)==0) (*log) << "\t\t 'FEET  ' = Feet\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 158 << "] "<< "\t Bottom side of image (ZADIRB)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"RIGHT ",6)==0) (*log) << "\t\t 'RIGHT ' = Right\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"LEFT  ",6)==0) (*log) << "\t\t 'LEFT  ' = Left\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"ANTR  ",6)==0) (*log) << "\t\t 'ANTR  ' = Anterior\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"POSTR ",6)==0) (*log) << "\t\t 'POSTR ' = Posterior\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"HEAD  ",6)==0) (*log) << "\t\t 'HEAD  ' = Head\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB),"FEET  ",6)==0) (*log) << "\t\t 'FEET  ' = Feet\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 164 << "] "<< "\t  (ZATCS)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZATCS)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZATCS),"TRN ",4)==0) (*log) << "\t\t 'TRN ' = Transverse\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZATCS),"COR ",4)==0) (*log) << "\t\t 'COR ' = Coronal\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZATCS),"SAG ",4)==0) (*log) << "\t\t 'SAG ' = Sagittal\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 168 << "] "<< "\t Interslice rest ms 'MTE=nn' (ZAMTE)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAMTE)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 176 << "] "<< "\t Interslice skip mm 'PT=nn' (ZAPIT)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAPIT)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 182 << "] "<< "\t Flip angle degress 'FLIP=nn' (ZAFLIP)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAFLIP)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 190 << "] "<< "\t Encode % 'ECD=nn%' (ZAENCD)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAENCD)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 198 << "] "<< "\t  (ZADIREP)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADIREP)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIREP),"(P,F) ",6)==0) (*log) << "\t\t '(P,F) ' = ?\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIREP),"(F,P) ",6)==0) (*log) << "\t\t '(F,P) ' = ?\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 204 << "] "<< "\t Sequence Name (ZANSEQ)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZANSEQ)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 212 << "] "<< "\t SYSTEM-ID 1 (ZAMATER1)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAMATER1)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 220 << "] "<< "\t SYSTEM-ID 2 (ZAMATER2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAMATER2)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 228 << "] "<< "\t SYSTEM-ID 3 (ZAMATER3)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAMATER3)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 236 << "] "<< "\t (ZASITE)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZASITE)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 238 << "] "<< "\t Averages 'NEX=n' (ZAAVG)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZAAVG)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 246 << "] "<< "\t Left direction (ZADIRL2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"RT",2)==0) (*log) << "\t\t 'RT' = Right\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"LT",2)==0) (*log) << "\t\t 'LT' = Left\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"HD",2)==0) (*log) << "\t\t 'HD' = Head\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"FT",2)==0) (*log) << "\t\t 'FT' = Feet\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"PO",2)==0) (*log) << "\t\t 'PO' = Posterior\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRL2),"AN",2)==0) (*log) << "\t\t 'AN' = Anterior\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 248 << "] "<< "\t Down direction (ZADIRB2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZADIRB2)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 250 << "] "<< "\t SCAN (?) (Unknown250)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->Unknown250)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 256 << "] "<< "\t (ZMAGN)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZMAGN
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 258 << "] "<< "\t (ZSCSW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSCSW
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 260 << "] "<< "\t Images in series (ZIMAGE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZIMAGE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 262 << "] "<< "\t (ZSLICE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSLICE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 264 << "] "<< "\t 1,2,4 (ZECHO)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZECHO
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 266 << "] "<< "\t (ZXSIZE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZXSIZE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 268 << "] "<< "\t (ZYSIZE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYSIZE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 270 << "] "<< "\t (ZTBLK)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTBLK
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 272 << "] "<< "\t Even line DC neg (ZNEGSW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZNEGSW
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZNEGSW == 0) (*log) << "\t\t\t 0 = No\n";
	if (SHIM_HeaderInstance_MAINHDR->ZNEGSW == 1) (*log) << "\t\t\t 1 = Yes\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 274 << "] "<< "\t (ZFTYPE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZFTYPE
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZFTYPE == 0) (*log) << "\t\t\t 0 = 0\n";
	if (SHIM_HeaderInstance_MAINHDR->ZFTYPE == 1) (*log) << "\t\t\t 1 = 1\n";
	if (SHIM_HeaderInstance_MAINHDR->ZFTYPE == 2) (*log) << "\t\t\t 2 = 2\n";
	if (SHIM_HeaderInstance_MAINHDR->ZFTYPE == 3) (*log) << "\t\t\t 3 = 1+2\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 276 << "] "<< "\t Max (ZCALB)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCALB
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZCALB == 0) (*log) << "\t\t\t 0 = No\n";
	if (SHIM_HeaderInstance_MAINHDR->ZCALB == 1) (*log) << "\t\t\t 1 = Yes\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 278 << "] "<< "\t (ZLBLK)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZLBLK
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 280 << "] "<< "\t (ZRBLK)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZRBLK
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 282 << "] "<< "\t (ZIBLKA)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZIBLKA
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 284 << "] "<< "\t (ZCOIL)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCOIL
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 286 << "] "<< "\t (ZDTYPE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZDTYPE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 288 << "] "<< "\t (ZETYPE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZETYPE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 290 << "] "<< "\t (ZKRNL)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZKRNL
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 292 << "] "<< "\t (ZPTOR1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPTOR1
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR1 == 0) (*log) << "\t\t\t 0 = head first\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR1 == 1) (*log) << "\t\t\t 1 = feet first\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 294 << "] "<< "\t (ZPTOR2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPTOR2
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR2 == 0) (*log) << "\t\t\t 0 = supine\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR2 == 1) (*log) << "\t\t\t 1 = prone\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR2 == 2) (*log) << "\t\t\t 2 = right side down\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR2 == 3) (*log) << "\t\t\t 3 = left side down\n";
	if (SHIM_HeaderInstance_MAINHDR->ZPTOR2 == 4) (*log) << "\t\t\t 4 = other\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 296 << "] "<< "\t (ZLRVS)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZLRVS
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZLRVS == 0) (*log) << "\t\t\t 0 = Up\n";
	if (SHIM_HeaderInstance_MAINHDR->ZLRVS == 1) (*log) << "\t\t\t 1 = Down\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 298 << "] "<< "\t (Unknown298)\t <"
		 << SHIM_HeaderInstance_MAINHDR->Unknown298
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 300 << "] "<< "\t Mode (ZRCDMODE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZRCDMODE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 302 << "] "<< "\t (ZVDBAND)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZVDBAND
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 304 << "] "<< "\t (ZYSTL)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYSTL
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 306 << "] "<< "\t (ZPWGHT)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPWGHT
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 308 << "] "<< "\t RF power ratio  % (ZPFUSE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPFUSE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 310 << "] "<< "\t (ZSATON)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZSATON)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZSATON),"P ",2)==0) (*log) << "\t\t 'P ' = Potassium\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZSATON),"H ",2)==0) (*log) << "\t\t 'H ' = Hydrogen\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZSATON),"Na",2)==0) (*log) << "\t\t 'Na' = Sodium\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 312 << "] "<< "\t 10kHz (ZSFREQ)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSFREQ
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 314 << "] "<< "\t (ZIMFLT)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZIMFLT
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZIMFLT == 0) (*log) << "\t\t\t 0 = No\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 316 << "] "<< "\t (ZSLANT2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSLANT2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 318 << "] "<< "\t Recon (ZROTPHS)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZROTPHS
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 320 << "] "<< "\t Slice width     *10mm (ZWIDE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZWIDE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 322 << "] "<< "\t Interslice skip *10mm (ZPITCH)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPITCH
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 324 << "] "<< "\t Center location *10mm offset from isocenter in ZDIR direction (SAG L+,COR A+,TRN F+) FOR CENTER OF SERIES (ZCLOC)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCLOC
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 326 << "] "<< "\t *100 (ZMAG)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZMAG
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 328 << "] "<< "\t X mm (ZCNTX)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCNTX
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 330 << "] "<< "\t Y mm (ZCNTY)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCNTY
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 332 << "] "<< "\t *10 (ZVIEW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZVIEW
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 334 << "] "<< "\t Orientation (ZDIR)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZDIR
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZDIR == 1) (*log) << "\t\t\t 1 = Trn\n";
	if (SHIM_HeaderInstance_MAINHDR->ZDIR == 2) (*log) << "\t\t\t 2 = Cor\n";
	if (SHIM_HeaderInstance_MAINHDR->ZDIR == 3) (*log) << "\t\t\t 3 = Sag\n";
	if (SHIM_HeaderInstance_MAINHDR->ZDIR == 6) (*log) << "\t\t\t 6 = Non\n";
	if (SHIM_HeaderInstance_MAINHDR->ZDIR == 7) (*log) << "\t\t\t 7 = Point\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 336 << "] "<< "\t Alpha *10 degrees (tilt angle of vertical, up-to-down direction relative to base plane (C,S,T)) (ZANG1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZANG1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 338 << "] "<< "\t Beta *10 degrees (tilt angle of horizontal, left-to-right direction) (ZANG2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZANG2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 340 << "] "<< "\t (ZPSID1)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSID1)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 348 << "] "<< "\t (ZPSIM1)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSIM1)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 350 << "] "<< "\t (ZPSCR1)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSCR1)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 352 << "] "<< "\t (ZPSID2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSID2)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 360 << "] "<< "\t (ZPSIM2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSIM2)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 362 << "] "<< "\t (ZPSCR2)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPSCR2)
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 364 << "] "<< "\t system *10 degrees (ZANG3S)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZANG3S
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 366 << "] "<< "\t user *10 degrees (ZANG3U)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZANG3U
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 368 << "] "<< "\t Tilt (ZTILTSW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTILTSW
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTILTSW == 1) (*log) << "\t\t\t 1 = 1\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTILTSW == 2) (*log) << "\t\t\t 2 = 2\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTILTSW == 3) (*log) << "\t\t\t 3 = Trn\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTILTSW == 4) (*log) << "\t\t\t 4 = Cor\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 370 << "] "<< "\t location +/-512 (ZPSOR1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOR1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 372 << "] "<< "\t location *10 degrees (ZPSOA1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOA1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 374 << "] "<< "\t location +/-512 (ZPSOR2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOR2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 376 << "] "<< "\t location *10 degrees (ZPSOA2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOA2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 378 << "] "<< "\t loc 0-100mm (ZPSOD1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOD1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 380 << "] "<< "\t loc 0-100mm (ZPSOD2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSOD2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 382 << "] "<< "\t orthog=10000 (ZSLANT)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSLANT
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 384 << "] "<< "\t (ZPMOD)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZPMOD)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZPMOD),"IR",2)==0) (*log) << "\t\t 'IR' = Inversion Recovery\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZPMOD),"SE",2)==0) (*log) << "\t\t 'SE' = Spin Echo\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZPMOD),"FE",2)==0) (*log) << "\t\t 'FE' = Field Echo\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 386 << "] "<< "\t TR ms (ZTR)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTR
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 388 << "] "<< "\t TE ms (ZTE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 390 << "] "<< "\t TI ms (ZTI)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTI
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 392 << "] "<< "\t X Encode (ZNX)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZNX
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 394 << "] "<< "\t Y Encode (ZNY)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZNY
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 396 << "] "<< "\t X NEX (ZXAV)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZXAV
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 398 << "] "<< "\t Y NEX (ZYAV)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYAV
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 400 << "] "<< "\t Echo (ZEAV)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZEAV
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 402 << "] "<< "\t (ZSTIM)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSTIM
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 404 << "] "<< "\t (ZCONST)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZCONST)
		 << ">\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZCONST),"2D",2)==0) (*log) << "\t\t '2D' = 2D\n";
	if (strncmp(String_Use(SHIM_HeaderInstance_MAINHDR->ZCONST),"3D",2)==0) (*log) << "\t\t '3D' = 3D\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 406 << "] "<< "\t degrees (ZFLIP)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZFLIP
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 408 << "] "<< "\t (ZRESP)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZRESP
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZRESP == 0) (*log) << "\t\t\t 0 = No\n";
	if (SHIM_HeaderInstance_MAINHDR->ZRESP == 1) (*log) << "\t\t\t 1 = Yes\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 410 << "] "<< "\t (ZECG)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZECG
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZECG == 0) (*log) << "\t\t\t 0 = No\n";
	if (SHIM_HeaderInstance_MAINHDR->ZECG == 1) (*log) << "\t\t\t 1 = Yes\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 412 << "] "<< "\t Chemical Shift *10ppm (ZDIXON )\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZDIXON 
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 414 << "] "<< "\t Interslice rest (mS ?) (ZMTE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZMTE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 416 << "] "<< "\t (ZHALF)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZHALF
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 418 << "] "<< "\t (ZSGNSW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSGNSW
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 420 << "] "<< "\t (ZCINE)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCINE
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 422 << "] "<< "\t (ZPKZ)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPKZ
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 424 << "] "<< "\t TE Align (ZTEALN)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZTEALN
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTEALN == 0) (*log) << "\t\t\t 0 = In phase\n";
	if (SHIM_HeaderInstance_MAINHDR->ZTEALN == 1) (*log) << "\t\t\t 1 = Opposed\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 426 << "] "<< "\t Chemical Shift Switch (ZCSSW)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZCSSW
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 428 << "] "<< "\t (ZIMDIR)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZIMDIR
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 430 << "] "<< "\t (ZPSSP1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSSP1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 432 << "] "<< "\t (ZPSSP2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZPSSP2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 434 << "] "<< "\t X Dimension *10mm (ZXWD)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZXWD
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 436 << "] "<< "\t *10mm (ZXLOC1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZXLOC1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 438 << "] "<< "\t *10mm (ZXLOC2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZXLOC2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 440 << "] "<< "\t Y Dimension *10mm (ZYWD)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYWD
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 442 << "] "<< "\t *10mm (ZYLOC1)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYLOC1
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 444 << "] "<< "\t *10mm (ZYLOC2)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZYLOC2
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 446 << "] "<< "\t Header Revision (ZHREV)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZHREV
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 448 << "] "<< "\t (ZSYSMAG)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSYSMAG
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 450 << "] "<< "\t Optional Control (ZSCOPT)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSCOPT
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 452 << "] "<< "\t (ZANGIO)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZANGIO
		 << ">\n";
	if (SHIM_HeaderInstance_MAINHDR->ZANGIO == 0) (*log) << "\t\t\t 0 = No\n";
	if (SHIM_HeaderInstance_MAINHDR->ZANGIO == 1) (*log) << "\t\t\t 1 = Yes\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 454 << "] "<< "\t (Unknown454)\t <"
		 << SHIM_HeaderInstance_MAINHDR->Unknown454
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 456 << "] "<< "\t (Unknown456)\t <"
		 << SHIM_HeaderInstance_MAINHDR->Unknown456
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 458 << "] "<< "\t (Unknown458)\t <"
		 << SHIM_HeaderInstance_MAINHDR->Unknown458
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 460 << "] "<< "\t blk# (ZSXADR)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSXADR
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 462 << "] "<< "\t KSPM (ZSPMOD)\t <"
		 << SHIM_HeaderInstance_MAINHDR->ZSPMOD
		 << ">\n";
	(*log)	 << "[" << SHIM_Offset_MAINHDR_ptr << ":" << 464 << "] "<< "\t (ZIMINF)\t <"
		 << String_Use(SHIM_HeaderInstance_MAINHDR->ZIMINF)
		 << ">\n";
}

