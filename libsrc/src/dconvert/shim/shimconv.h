// Automatically generated from template - EDITS WILL BE LOST
//
// Generated by convert.awk with options or defaults ...
//
// 	 role=dicom
// 	 prefix=SHIM_
// 	 dicomfunctionname=ToDicom_Template
// 	 dumpcommonfunctionname=DumpCommon
// 	 dumpselectedimagefunctionname=DumpSelectedImage
// 	 headeroffsetprefix=SHIM_Offset
// 	 headeroffsetsuffix=ptr
// 	 headerclassprefix=SHIM_HeaderClass
// 	 headerdicomclassprefix=SHIM_Header_BothClass
// 	 headerdumpclassprefix=SHIM_Header_BothClass
// 	 headerinstanceprefix=SHIM_HeaderInstance
// 	 methodnameprefix=SHIM_Method
// 	 methodconstructorargsprefix=SHIM_MethodConstructorArgs
// 	 headerclassparameters=

void 
SHIM_Header_BothClass::ToDicom_Template(AttributeList *list,unsigned imagenumber)
{
	(void)imagenumber;

	(*list)+=new PersonNameAttribute(
		TagFromName(PatientName),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZANAME));

	(*list)+=new LongStringAttribute(
		TagFromName(PatientID),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZAID));

	(*list)+=new CodeStringAttribute(
		TagFromName(PatientSex),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZASEX));

	(*list)+=new LongTextAttribute(
		TagFromName(StudyComments),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZACOMM));

	(*list)+=new LongStringAttribute(
		TagFromName(InstitutionName),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZAHOSP));

	(*list)+=new ShortStringAttribute(
		TagFromName(SequenceName),
		String_Use(SHIM_HeaderInstance_MAINHDR->ZANSEQ));

	(*list)+=new IntegerStringAttribute(
		TagFromName(ImagesInAcquisition),
		SHIM_HeaderInstance_MAINHDR->ZIMAGE);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(Columns),
		SHIM_HeaderInstance_MAINHDR->ZXSIZE);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(Rows),
		SHIM_HeaderInstance_MAINHDR->ZYSIZE);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(PixelPaddingValue),0);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(BitsAllocated),16);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(BitsStored),16);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(HighBit),15);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(PixelRepresentation),0);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(SamplesPerPixel),1);

	(*list)+=new CodeStringAttribute(
		TagFromName(PhotometricInterpretation),"MONOCHROME2");

	(*list)+=new DateStringAttribute(
		TagFromName(PatientBirthDate));

	(*list)+=new ShortStringAttribute(
		TagFromName(AccessionNumber));

	(*list)+=new IntegerStringAttribute(
		TagFromName(SeriesInStudy),"1");

	(*list)+=new IntegerStringAttribute(
		TagFromName(AcquisitionsInStudy),"1");

	(*list)+=new ShortStringAttribute(
		TagFromName(StudyID));

	(*list)+=new IntegerStringAttribute(
		TagFromName(SeriesNumber),"1");

	(*list)+=new IntegerStringAttribute(
		TagFromName(InstanceNumber));

	(*list)+=new LongStringAttribute(
		TagFromName(DeviceSerialNumber));

	(*list)+=new DecimalStringAttribute(
		TagFromName(PatientWeight));

	(*list)+=new LongStringAttribute(
		TagFromName(Manufacturer),"SHIMADZU");

	(*list)+=new LongStringAttribute(
		TagFromName(ManufacturerModelName));

	(*list)+=new CodeStringAttribute(
		TagFromName(BodyPartExamined));

	(*list)+=new CodeStringAttribute(
		TagFromName(Modality),"MR");

}

