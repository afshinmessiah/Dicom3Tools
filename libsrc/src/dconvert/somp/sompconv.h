// Automatically generated from template - EDITS WILL BE LOST
//
// Generated by convert.awk with options or defaults ...
//
// 	 role=dicom
// 	 prefix=SOMP_
// 	 dicomfunctionname=ToDicom_Template
// 	 dumpcommonfunctionname=DumpCommon
// 	 dumpselectedimagefunctionname=DumpSelectedImage
// 	 headeroffsetprefix=SOMP_Offset
// 	 headeroffsetsuffix=ptr
// 	 headerclassprefix=SOMP_HeaderClass
// 	 headerdicomclassprefix=SOMP_Header_BothClass
// 	 headerdumpclassprefix=SOMP_Header_BothClass
// 	 headerinstanceprefix=SOMP_HeaderInstance
// 	 methodnameprefix=SOMP_Method
// 	 methodconstructorargsprefix=SOMP_MethodConstructorArgs
// 	 headerclassparameters=

void 
SOMP_Header_BothClass::ToDicom_Template(AttributeList *list,unsigned imagenumber)
{
	(void)imagenumber;

	(*list)+=new LongStringAttribute(
		TagFromName(SoftwareVersions),
		String_Use(SOMP_HeaderInstance_BINHDR->version));

	(*list)+=new LongStringAttribute(
		TagFromName(ManufacturerModelName),
		String_Use(SOMP_HeaderInstance_BINHDR->model));

	(*list)+=new LongStringAttribute(
		TagFromName(StudyDescription),
		String_Use(SOMP_HeaderInstance_BINHDR->description));

	(*list)+=new DecimalStringAttribute(
		TagFromName(KVP),
		SOMP_HeaderInstance_BINHDR->kv);

	(*list)+=new IntegerStringAttribute(
		TagFromName(Exposure),
		SOMP_HeaderInstance_BINHDR->mas);

	(*list)+=new DecimalStringAttribute(
		TagFromName(SliceThickness),
		SOMP_HeaderInstance_BINHDR->slthick);

	(*list)+=new IntegerStringAttribute(
		TagFromName(XRayTubeCurrent),
		SOMP_HeaderInstance_BINHDR->ma);

	(*list)+=new DecimalStringAttribute(
		TagFromName(ZoomFactor),
		SOMP_HeaderInstance_BINHDR->zoomfactor);

	(*list)+=new DecimalStringAttribute(
		TagFromName(SliceLocation),
		SOMP_HeaderInstance_BINHDR->tableposn);

	(*list)+=new DecimalStringAttribute(
		TagFromName(TableHeight),
		SOMP_HeaderInstance_BINHDR->tableheight);

	(*list)+=new IntegerStringAttribute(
		TagFromName(InstanceNumber),
		SOMP_HeaderInstance_BINHDR->scannumber);

	(*list)+=new LongStringAttribute(
		TagFromName(InstitutionName),
		String_Use(SOMP_HeaderInstance_TEXTHDR->thospital));

	(*list)+=new PersonNameAttribute(
		TagFromName(PatientName),
		String_Use(SOMP_HeaderInstance_TEXTHDR->tpatname));

	(*list)+=new LongStringAttribute(
		TagFromName(PatientID),
		String_Use(SOMP_HeaderInstance_TEXTHDR->tpatid));

	(*list)+=new DecimalStringAttribute(
		TagFromName(GantryDetectorTilt),
		String_Use(SOMP_HeaderInstance_TEXTHDR->tgt));

	(*list)+=new LongTextAttribute(
		TagFromName(ImageComments),
		String_Use(SOMP_HeaderInstance_TEXTHDR->tcomment));

	(*list)+=new UnsignedShortAttribute(
		TagFromName(PixelPaddingValue),0);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(BitsAllocated),16);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(BitsStored),16);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(HighBit),15);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(PixelRepresentation),0);

	(*list)+=new UnsignedShortAttribute(
		TagFromName(SamplesPerPixel),1);

	(*list)+=new CodeStringAttribute(
		TagFromName(PhotometricInterpretation),"MONOCHROME2");

	(*list)+=new DecimalStringAttribute(
		TagFromName(RescaleIntercept),"-1000");

	(*list)+=new DecimalStringAttribute(
		TagFromName(RescaleSlope),"1");

	(*list)+=new LongStringAttribute(
		TagFromName(RescaleType),"Hounsfield Units");

	(*list)+=new DecimalStringAttribute(
		TagFromName(WindowCenter),"30");

	(*list)+=new DecimalStringAttribute(
		TagFromName(WindowWidth),"250");

	(*list)+=new LongStringAttribute(
		TagFromName(WindowCenterWidthExplanation),"Soft tissue");

	(*list)+=new ShortStringAttribute(
		TagFromName(AccessionNumber));

	(*list)+=new IntegerStringAttribute(
		TagFromName(SeriesInStudy),"1");

	(*list)+=new IntegerStringAttribute(
		TagFromName(AcquisitionsInStudy),"1");

	(*list)+=new ShortStringAttribute(
		TagFromName(StudyID));

	(*list)+=new IntegerStringAttribute(
		TagFromName(SeriesNumber),"1");

	(*list)+=new LongStringAttribute(
		TagFromName(DeviceSerialNumber));

	(*list)+=new LongStringAttribute(
		TagFromName(Manufacturer),"SIEMENS");

	(*list)+=new DecimalStringAttribute(
		TagFromName(PatientWeight));

	(*list)+=new CodeStringAttribute(
		TagFromName(PatientSex));

	(*list)+=new DateStringAttribute(
		TagFromName(PatientBirthDate));

	(*list)+=new AgeStringAttribute(
		TagFromName(PatientAge));

	(*list)+=new CodeStringAttribute(
		TagFromName(BodyPartExamined));

	(*list)+=new ShortStringAttribute(
		TagFromName(FilterType));

	(*list)+=new CodeStringAttribute(
		TagFromName(Modality),"CT");

}

